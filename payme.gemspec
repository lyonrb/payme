# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run the gemspec command
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{payme}
  s.version = "0.0.7"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["LIM SAS", "Damien MATHIEU", "Julien SANCHEZ", "HervÃ© GAUCHER"]
  s.date = %q{2010-12-15}
  s.description = %q{Need online payment?}
  s.email = %q{damien.mathieu@lim.eu}
  s.extra_rdoc_files = [
    "LICENSE",
     "README.md"
  ]
  s.files = [
    ".gitignore",
     ".rvmrc",
     "Gemfile",
     "Gemfile.lock",
     "LICENSE",
     "README.md",
     "Rakefile",
     "VERSION",
     "lib/payme.rb",
     "lib/payme/config.rb",
     "lib/payme/errors.rb",
     "lib/payme/request.rb",
     "lib/payme/request/binary.rb",
     "lib/payme/request/params.rb",
     "lib/payme/response.rb",
     "lib/payme/response/binary.rb",
     "payme.gemspec",
     "spec/fixtures/config.yml",
     "spec/payme/config_spec.rb",
     "spec/payme/request/binary_spec.rb",
     "spec/payme/request/params_spec.rb",
     "spec/payme/request_spec.rb",
     "spec/payme/response/binary_spec.rb",
     "spec/payme/response_spec.rb",
     "spec/spec_helper.rb"
  ]
  s.homepage = %q{http://github.com/LIMSAS/payme}
  s.rdoc_options = ["--charset=UTF-8"]
  s.require_paths = ["lib"]
  s.rubygems_version = %q{1.3.7}
  s.summary = %q{Process online payments through the Atos Worldline gateway}
  s.test_files = [
    "spec/payme/config_spec.rb",
     "spec/payme/request/binary_spec.rb",
     "spec/payme/request/params_spec.rb",
     "spec/payme/request_spec.rb",
     "spec/payme/response/binary_spec.rb",
     "spec/payme/response_spec.rb",
     "spec/spec_helper.rb"
  ]

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 3

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
    else
    end
  else
  end
end

